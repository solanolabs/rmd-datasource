#logging.level.root=DEBUG
logging.level.org.springframework=INFO
logging.level.com.ge.predix.solsvc=DEBUG
logging.level.org.apache.http.impl.client=DEBUG
server.port=9092
spring.profiles.active=local

#if you are behind a corporate proxy/firewall and want to access Predix Cloud
#predix.oauth.proxyHost =put.your.proxyHost.here 
#predix.oauth.proxyPort=put.your.proxyPort.here

#OAuth - please see predix-rest-client src/main/java/com/ge/predix/solsvc/restclient/config/OauthRestConfig.java for more info on oauth properties
predix.oauth.restHost=put.your.uaa.uri.here
#you may put client:secret as unencoded cleartext by setting predix.oauth.clientIdEncode=true
predix.oauth.clientIdEncode=false
predix.oauth.clientId=you.should.base64encode(put.your.clientId:put.your.clientSecret) 

#asset - get from VCAP env vars by binding an application to your asset instance e.g. cf bind-service <my-app> <my-asset>
#asset - see asset-bootstrap - src/main/java/com/ge/predix/solsvc/bootstrap/ams/common/AssetRestConfig.java for more info on asset properties 
predix.asset.restHost=put.your.asset.service.instance.name.hostname.here
predix.asset.zoneid=put.your.asset.zoneid

#timeseries - get from VCAP env vars by binding an application to your timeseries instance e.g. cf bind-service <my-app> <my-timeseries>
#timeseries - see timeseries-bootstrap - src/main/java/com/ge/predix/solsvc/timeseries/bootstrap/config/TimeseriesRestConfig.java for more info on timeseries properties 
predix.timeseries.ingestUri=put.your.timeseries.instance.ingest.uri.here
predix.timeseries.ingestionUsername=put.your.uaa.user.username.here
predix.timeseries.ingestionPassword=put.your.uaa.user.password.here
predix.timeseries.queryUri=put.your.timeseries.instance.query.uri.here
predix.timeseries.baseUrl=put.your.timeseries.instance.base.uri.here
predix.timeseries.zoneid=put.your.timeseries.zoneid

#deprecated - these override variables we are refactoring away from. 
predix.timeseries.override.oauthOverride=false
predix.timeseries.override.oauthClientId=
predix.timeseries.override.oauthRestHost=

#used by predix uaa-token-lib
trustedIssuerIdsRegexPattern=^https://(.*\\.)?put.your.uaa.uri.here/oauth/token$

predix.websocket.pool.maxIdle=5
predix.websocket.pool.maxActive=5
predix.websocket.pool.maxWait=8000
predix.websocket.pool.maxInstances=5




    
